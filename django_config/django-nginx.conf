upstream django {
    #server unix://django_project_absolute_url/project_name.sock;  　#这个.sock文件不存在也没关系，启动的时候会自动创建
    #例如我的项目的绝对路径为/home/floder/crawler 这行就是 server unix:///home/floder/crawler/crawler.sock
    server 127.0.0.1:8001; # for a web port socket (we'll use this first)
}
# 配置转发服务器
server {
  # 应用监听端口
  listen      8000;
  # 允许访问的域名　没有域名的话就写服务器的公网ip地址
  server_name localhost;  #这是我的一个django项目，项目访问地址为 http://crawler.site ,欢迎访问使用
  charset     utf-8;
  #访问日志
  access_log  /home/KnowledgeGraph/semanticserver-v1.2.1_20200114/sementic_server/output/logs/project_name_access.log;
  #错误日志
  error_log   /home/KnowledgeGraph/semanticserver-v1.2.1_20200114/sementic_server/output/logs/project_name_error.log;
  # 最大上传文件大小
  client_max_body_size 75M;  
  # 配置静态文件的请求
  location /static {
      alias  /static_files_absolute_url; #项目静态文件地址，使用python3 manage.py collectstatic 将静态文件收集到settings.py文件配置的STATIC_ROOT目录下
  }

  # 配置django应用的转发请求
  location / {
      uwsgi_pass  django;
      include     /home/KnowledgeGraph/semanticserver-v1.2.1_20200114/django_config/uwsgi_params; # 这个uwsgi_params文件的地方，默认在/etc/nginx目录下随nginx一起被安装
  }

  location /favicon.ico{
      alias /favicon.ico_absolute_url;   #网站图标地址  
  }
  #这里还可以配置许多独立的请求地址，只要找到对应的静态资源地址即可
   #location /xxx.html{
   # alias /xxx.html_absolute_url;
   #}
}
